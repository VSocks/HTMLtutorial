init: Inicia o git, criando um novo repositório local vazio para o projeto

clone: Cria uma cópia de um repositório já existente do github.

branch: Usado para listar os existentes "ramos", isto é, diferentes ambientes de programação dentro do mesmo repositório. Um conjunto de ramos se chama uma árvore.

checkout: Usado para criar novos ramos ou navegar ramos já existentes.

status: Mostra o estado atual do arquivo atual e da área de "staging."

diff: Exibe diferenças entre commits, ramos e diretórios.

add: Envia arquivos para a área de "staging", preparando para que as mudanças possam receber "commit."

commit: Salva o estado atual dos arquivos no estado de "staging", aplicando de fato suas alterações.

push: Envia o repositório local para o repositório no github.

pull: Baixa um ramo de um repositório do github e merge com o ramo atual.

revert: Desfaz um commit.

merge: Mescla dois ou mais arquivos.

stash: Salva todas as mudanças feitas nos arquivos, sem dar commit.

rm: Remove arquivos do repositório ou ramos da árvore.

config: Define configurações para a instalação do git, tipicamente só usando no download.

reset: Desfaz mudanças feitas no diretório atual.

remote: Usado para criar uma conexão entre o repositório online do github e o repositório local do computador.

fetch: Baixa um ramo e os arquivos de um repositório do github, mas não os integra com nada do repositório atual.

show: Mostra os elementos especificados, como ramos, commits, e tags.

help: Exibe documentação sobre o git.

rebase: Permite movimentar ramos, para evitar conflitos na hora de junta-los.

blame: Exibe quem foi a última pessoa a modificar cada linha do arquivo.

tag: Usado para marcar pontos importantes no histórico do repositório, ou seja, definir "versões" do código.